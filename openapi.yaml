openapi: "3.0.3"
info:
  title: "TaskManagementSystem API"
  description: "TaskManagementSystem API"
  version: "1.0.0"
servers:
  - url: "localhost:8080"
tags:
  - name: "Контроллер авторизации"
    description: "Контроллер для авторизации пользователей. Неавторизованный пользов\
    атель не имеет доступа ни к одному из эндпоинтов"
  - name: "Контроллер для работы с задачами"
    description: "Контроллер для CRUD операций с задачами и получения списков задач\
    \ по критериям"
  - name: "Контроллер для работы с комментариями"
    description: "Контроллер для добавления комментариев и получения списка коммента\
    риев задачи"
paths:
  /api/auth/signin:
    post:
      summary: "Авторизация пользователя"
      description: "Пользователь передает заранее зарегистрированные имя и пароль\
        \ и получает токен"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/auth/signout:
    post:
      summary: "Выход из системы"
      description: "Токен становится недействительным и потребуется повторная авто\
        ризация с получением нового токена. Открытая сессия также закрывается."
      operationId: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/tasks/{taskId}:
    patch:
      summary: "Обновление задачи"
      description: "В зависимости от того, кто является инициатором обновления мог\
        ут быть обновлены либо все поля задачи (обновляет инициатор), либо только\
        \ статус (обновляет исполнитель)"
      operationId: ""
      parameters:
        - name: "taskId"
          in: "path"
          required: true
          description: "Идентификатор задачи"
          schema:
            type: "integer"
            format: "int64"
        - name: "users"
          in: "query"
          required: false
          description: "Список идентификаторов пользователей для обновления списка и\
          сполнителей задачи"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskDto"
    delete:
      summary: "Удаление задачи по идентификатору"
      description: "Попытка удаления задачи не инициатором приведет к exception"
      operationId: ""
      parameters:
        - name: "taskId"
          in: "path"
          required: true
          description: "Идентификатор задачи"
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
    get:
      summary: "Поиск задачи"
      description: "Поиск задачи по идентификатору"
      operationId: ""
      parameters:
        - name: "taskId"
          in: "path"
          required: true
          description: "Идентификатор задачи"
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskDto"
  /api/tasks:
    post:
      summary: "Добавление задачи"
      description: "Добавление задачи"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskDto"
  /api/tasks/all:
    get:
      summary: "Поиск задач"
      description: "Поиск всех задач с пагинацией."
      operationId: ""
      parameters:
        - name: "from"
          in: "query"
          required: false
          description: "Номер начальной страницы"
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          in: "query"
          required: false
          description: "Количество элементов на странице"
          schema:
            type: "integer"
            format: "int32"
            default: "50"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/TaskDto"
  /api/tasks/search/{userId}:
    get:
      summary: "Поиск списка задач исполнителей или инициаторов"
      description: "Поиск списка задач закрепленных за исполнителем, либо созданны\
        х инициатором в зависимости от параметра role"
      operationId: ""
      parameters:
        - name: "userId"
          in: "path"
          required: true
          description: "Идентификатор пользователя"
          schema:
            type: "integer"
            format: "int64"
        - name: "role"
          in: "query"
          required: true
          description: "Параметр со значением с или INITIATOR, в зависимости от указ\
          анного параметра осуществляется поиск задач назначенных исполнителю EXECUTOR\
          \ или задач созданных пользователем INITIATOR"
          schema:
            type: "string"
        - name: "from"
          in: "query"
          required: false
          description: "Номер начальной страницы"
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          in: "query"
          required: false
          description: "Количество элементов на странице"
          schema:
            type: "integer"
            format: "int32"
            default: "50"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/TaskDto"
  /api/tasks/{taskId}/comments/add:
    post:
      summary: "Добавление комментария"
      description: "Добавление комментария к задаче по идентификатору"
      operationId: ""
      parameters:
        - name: "taskId"
          in: "path"
          required: true
          description: "Идентификатор задачи"
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /api/tasks/{taskId}/comments:
    get:
      summary: "Поиск комментариев"
      description: "Поиск всех комментариев к задаче по идентификатору"
      operationId: ""
      parameters:
        - name: "taskId"
          in: "path"
          required: true
          description: "Идентификатор задачи"
          schema:
            type: "integer"
            format: "int64"
        - name: "from"
          in: "query"
          required: false
          description: "Номер начальной страницы"
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          in: "query"
          required: false
          description: "Количество элементов на странице"
          schema:
            type: "integer"
            format: "int32"
            default: "50"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
components:
  schemas:
    LoginDto:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
    UserDto:
      type: "object"
      properties:
        name:
          type: "string"
    TaskDto:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"
        initiatorId:
          type: "integer"
          format: "int64"
        executors:
          type: "array"
          items:
            $ref: "#/components/schemas/UserDto"
        state:
          type: "string"
          enum:
            - "PENDING"
            - "PROGRESS"
            - "COMPLETED"
        priority:
          type: "string"
          enum:
            - "LOW"
            - "MEDIUM"
            - "HIGH"
    CommentDto:
      type: "object"
      properties:
        authorId:
          type: "integer"
          format: "int64"
        taskId:
          type: "integer"
          format: "int64"
        text:
          type: "string"
    HttpHeaders:
      type: "object"
      properties: { }
    ResponseEntity:
      type: "object"
      properties:
        headers:
          $ref: "#/components/schemas/HttpHeaders"